
What can a player do?

- Roll Dice -> Ressources Distribution / Robber + Steal
- End Turn

- Build Road
- Build Settlement
- Upgrade to City

- Play one Development Card 

- Trade with Bank
- Propose Trade with Player
- Accept/Decline Trade with Player
- Trade with Player (if accepted)

Action dict example:
'type' (Str)
'resources' (Dict or List)
'target_tile' (Int)
'victim_id' (Int)
'vertex_id' (Int)
'edge_id' (Int)
'trader_id' (Int)
'offer' (Dict)
'request' (Dict)
'edge_ids' (List[Int])
'resource' (Str)





roll_dice (No input needed) -> {'type': 'roll_dice'}
end_turn (No input needed) -> {'type': 'end_turn'}

place_road (Int) -> {'type': 'place_road', 'edge_id': 12}
place_settlement (Int) -> {'type': 'place_settlement', 'vertex_id': 8}
place_city (Int) -> {'type': 'place_city', 'vertex_id': 8}
buy_development_card (No input needed) -> {'type': 'buy_development_card'}


TODO:

discard_resources (Dict) -> {'type': 'discard_resources', 'resources': {'wood': 1, 'brick': 2}}
move_robber (Int) -> {'type': 'move_robber', 'target_tile': 5}

play_knight (Int) -> {'type': 'play_knight', 'target_tile': 5, 'victim_id': 2}
play_road_building (List[Int]) -> {'type': 'play_road_building', 'edge_ids': [12, 15]} # can be one or two roads
play_year_of_plenty (List[Str]) -> {'type': 'play_year_of_plenty', 'resources': ['wood', 'brick']} # can be one or two resources
play_monopoly (Str) -> {'type': 'play_monopoly', 'resource': 'wood'}

propose_trade (Int, Dict, Dict) -> {'type': 'propose_trade', 'trader_id': 2, 'offer': {'wood': 1}, 'request': {'brick': 1}}
accept_trade (Int) -> {'type': 'accept_trade', 'trader_id': 2}
decline_trade (Int) -> {'type': 'decline_trade', 'trader_id': 2}
make_trade (Int, Int, Dict, Dict) -> {'type': 'make_trade', 'trader_1_id': 1, 'trader_2_id': 2, 'offer': {'wood': 1}, 'request': {'brick': 1}}
bank_trade (Dict, Dict) -> {'type': 'bank_trade', 'offer': {'wood': 4}, 'request': {'brick': 1}}

So I really only want to type in the minimum amount of info for each action (no bracekts or quotes) and have the code generate the action dict for me.

